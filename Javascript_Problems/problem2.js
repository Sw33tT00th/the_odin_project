/* Problem 2:
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89
 * By considering the terms of the Fibonacci sequence whose values do not exceed four million,
 * find the sum of the even valued terms.
*/

// Defined as a recursive function (a function that calls itself)
var fib = function (nMinusOne, nMinusTwo, sum) {
	// sum the previous two terms to get the next value
	var n = nMinusOne + nMinusTwo;
	// check to see if this value is at or above the highest value
	if(n >= 4000000) {
		// if it is above 4,000,000 then return the current sum
		return sum;
	}
	// check to see if n is even
	if (n % 2 === 0) {
		//if it is even, add it to sum
		sum += n;
	}
	// recursivly call this function with the previous highest term
	// and the current term, as well as the current sum.
	sum = fib(nMinusTwo, n, sum);
	// return the sum at the very end.
	return sum;
}

print(fib(1, 2, 0));